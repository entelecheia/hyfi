[tool.poetry]
name = "hyfi"
version = "0.2.2"
description = "Hydra Fast Interface (Hydra and Pydantic based interface framework)"
authors = ["Young Joon Lee <entelecheia@hotmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "hyfi", from = "src" }]

[tool.poetry.scripts]
hyfi = 'hyfi.cli:hydra_main'

[tool.poetry.dependencies]
python = "^3.8.1, <3.12"
hydra-core = "^1.3.2"
hydra-colorlog = "^1.2.0"
pydantic = "<=1.10.5"
chardet = "<=4.0.0"
pandas = "<1.4.0"
scipy = "<=1.8"
matplotlib = "<=3.5.3"
numpy = "<1.24"
python-dotenv = "^1.0.0"
gdown = "<=4.4.0"
requests = "<=2.25.1"
tqdm = "^4.64.1"
cached-path = "^1.3.3"
pygments = "<=2.6.1"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted into by apps.
ipython = { version = "<=7.9.0", optional = true }
ipython-autotime = { version = "^0.3.1", optional = true }

[tool.poetry.extras]
ipython = ["ipython", "ipython-autotime"]

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^7.33.1"
setuptools-scm = "^7.1.0"
isort = "^5.12.0"
black = "^23.1.0"
flake8 = "^6.0.0"
mypy = "^1.0.0"
flake8-pyproject = "^1.2.2"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"

[tool.black]
exclude = [
    '_version.py',
    'node_modules',
    '_build',
    'docs',
    'tests',
    'venv',
    '.copier-template',
    '.refs',
]

[tool.isort]
profile = "black"
skip = [
    '_version.py',
    'node_modules',
    '_build',
    'docs',
    'tests',
    'venv',
    '.copier-template',
    '.refs',
    "cpath",
]

[tool.flake8]
exclude = [
    "node_modules",
    "_build",
    "docs",
    "tests",
    "venv",
    ".copier-template",
    ".refs",
    "cpath",
]
per-file-ignores = [
    '__init__.py:F401,F403',
    '_version.py:W292',
    '*:E501,E203',
    'notebook.py:F821,E501',
    'motion.py:W605,E501',
]

[tool.mypy]
namespace_packages = true
exclude = [
    "node_modules",
    "build",
    "_build",
    "dist",
    "docs",
    "tests",
    "venv",
    ".copier-template",
    ".refs",
    "cpath",
]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
# platform
python_version = "3.8"
# untyped
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
# None and Optional
no_implicit_optional = false
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider" # deactivating pytest caching.

[tool.coverage.report]
exclude_lines = ['if __name__ == "__main__":']

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.1"
tag_format = "v$version"

[tool.setuptools_scm]
write_to = "src/hyfi/_version.py"
write_to_template = '__version__ = "{version}"'
tag_regex = '^(?P<prefix>v)?(?P<version>[^\+]+)(?P<suffix>.*)?$'

[tool.semantic_release]
branch = "main"
version_variable = "src/hyfi/_version.py:__version__"
version_toml = "pyproject.toml:tool.poetry.version"
version_source = "tag"
commit_version_number = true                                    # required for version_source = "tag"
commit_subject = "chore(release): :rocket: {version} [skip ci]"
prerelease_tag = "rc"
major_on_zero = true
tag_commit = true
changelog_file = "CHANGELOG.md"
upload_to_repository = true
upload_to_release = true
build_command = "poetry build --no-cache"
hvcs = "github"                                                 # hosting version control system, gitlab is also supported

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = 'setuptools.build_meta'
